library(fuzzyjoin)
library(shellpipes)
library(tidyverse)
set.seed(2025)
options(macpan2_log_dir = ".")
loadEnvironments()
start_date <- as.Date("2021-12-15") - offset0
last_date <-"2022-05-22"
seroprevdata <- rdsRead("seroprevdata.rds")
time_steps = max(seroprevdata$time)
upper_plot_time = 300
seroprevdata <- seroprevdata %>%
complete(date = seq.Date(
from = as.Date("2021-12-15"),
to   = max(date),
by   = "1 day"
))
seroprevdata <- (seroprevdata
|> select(c("date","value"))
|> dplyr::filter(date >= as.Date("2021-12-15") & date <= as.Date("2022-05-22"))
)
seroprev_plot <- (ggplot() +
geom_point(
data = seroprevdata,
aes(x = date, y = value, color = "Seroprevalence"),
size = 2.5,
show.legend = TRUE
) +
scale_x_date(
#expand = c(0, 0),
date_breaks = "2 week",
date_labels = "%b %d"
) +
labs(
x = "Date (Dec 15, 2021 - May 22, 2022)",
y = "Seroprevalence Estimate (%)",
title = "Seroprevalence Estimate (%)"
) +
scale_color_manual(
name = NULL,
values = c("Seroprevalence" = "black")
) +
theme_clean() +
theme(
axis.text.x = element_text(size = 14, angle = 45, hjust = 0.85),
axis.title.x = element_text(size = 14, color = "black", face = "bold"),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 14, color = "black", face = "bold"),
plot.title = element_text(size = 14, color = "black", hjust = 0.5),
strip.text = element_text(size = 14, color = "black"),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.background = element_rect(color = NA),
legend.margin = margin(0, 0, 0, 0),
plot.background = element_blank(),
legend.position = c(0.2, 0.8)
) )
seroprev_plot
# load reported data
reported_cases <- read.csv("~/Documents/MUN/Thesis Samples/quantifying_omicron_burden_in_NL/data/serop_avgcase_data.csv")
reported_cases$date <- as.Date(reported_cases$date, format = "%Y-%m-%d")
reported_cases <- reported_cases |>
dplyr::filter(date <= as.Date("2022-05-22"))
# drop all NAs
reported_cases <- reported_cases |>
drop_na()
reported_cases <- (ggplot(reported_cases, aes(x = date)) +
geom_point( aes(y = cases, color = "Reported Cases"),size = 2.5) +
scale_x_date(
#expand = c(0, 0),
date_breaks = "2 week",
date_labels = "%b %d"
) +
labs(
x = "Date (Dec 15, 2021 - May 22, 2022)",
y = "Daily reported cases",
title = "Smoothed Daily Reported Cases"
) +
scale_color_manual(
name = NULL,
values = c("Reported Cases" = "black")
) +
theme_clean() +
theme(
axis.text.x = element_text(size = 14, angle = 45, hjust = 0.85),
axis.title.x = element_text(size = 14, color = "black", face = "bold"),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 14, color = "black", face = "bold"),
plot.title = element_text(size = 14, color = "black", hjust = 0.5),
strip.text = element_text(size = 14, color = "black"),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.background = element_rect(color = NA),
legend.margin = margin(0, 0, 0, 0),
plot.background = element_blank(),
legend.position = c(0.8, 0.8)
))
reported_cases
final_plot <- plot_grid(
reported_cases,
seroprev_plot,
labels = c("R","S"),
nrow = 1,
align = "v",      # align plots vertically for horizontal layout
axis = "tb",      # align top and bottom axes
rel_widths = c(1, 1) # adjust widths if plots differ in size
)
final_plot
# load reported data
reported_cases <- read.csv("~/Documents/MUN/Thesis Samples/quantifying_omicron_burden_in_NL/data/serop_avgcase_data.csv")
reported_cases$date <- as.Date(reported_cases$date, format = "%Y-%m-%d")
reported_cases <- reported_cases |>
dplyr::filter(date <= as.Date("2022-05-22"))
# drop all NAs
reported_cases <- reported_cases |>
drop_na()
reported_cases <- (ggplot(reported_cases, aes(x = date)) +
geom_point( aes(y = cases, color = "Reported Cases"),size = 2.5) +
scale_x_date(
#expand = c(0, 0),
date_breaks = "2 week",
date_labels = "%b %d"
) +
labs(
x = "Date (Dec 15, 2021 - May 22, 2022)",
y = "Daily reported cases",
title = "Smoothed Daily Reported Cases"
) +
scale_color_manual(
name = NULL,
values = c("Reported Cases" = "black")
) +
theme_clean() +
theme(
axis.text.x = element_text(size = 14, angle = 45, hjust = 0.85),
axis.title.x = element_text(size = 16, color = "black", face = "bold"),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 16, color = "black", face = "bold"),
plot.title = element_text(size = 14, color = "black", hjust = 0.5),
strip.text = element_text(size = 14, color = "black"),
legend.title = element_blank(),
legend.text = element_text(size = 16),
legend.background = element_rect(color = NA),
legend.margin = margin(0, 0, 0, 0),
plot.background = element_blank(),
legend.position = c(0.8, 0.8)
))
reported_cases
final_plot <- plot_grid(
reported_cases,
seroprev_plot,
labels = c("R","S"),
nrow = 1,
align = "v",      # align plots vertically for horizontal layout
axis = "tb",      # align top and bottom axes
rel_widths = c(1, 1) # adjust widths if plots differ in size
)
final_plot
library(dplyr)
library(lubridate)
library(ggplot2)
library(RColorBrewer)
library(dplyr)
library(tidyr)
library(zoo)
library(ggthemes)
library(cowplot)
library(patchwork)
library(fuzzyjoin)
library(shellpipes)
library(tidyverse)
set.seed(2025)
options(macpan2_log_dir = ".")
loadEnvironments()
start_date <- as.Date("2021-12-15") - offset0
last_date <-"2022-05-22"
seroprevdata <- rdsRead("seroprevdata.rds")
time_steps = max(seroprevdata$time)
upper_plot_time = 300
seroprevdata <- seroprevdata %>%
complete(date = seq.Date(
from = as.Date("2021-12-15"),
to   = max(date),
by   = "1 day"
))
seroprevdata <- (seroprevdata
|> select(c("date","value"))
|> dplyr::filter(date >= as.Date("2021-12-15") & date <= as.Date("2022-05-22"))
)
seroprev_plot <- (ggplot() +
geom_point(
data = seroprevdata,
aes(x = date, y = value, color = "Seroprevalence"),
size = 2.5,
show.legend = TRUE
) +
scale_x_date(
#expand = c(0, 0),
date_breaks = "2 week",
date_labels = "%b %d"
) +
labs(
x = "Date (Dec 15, 2021 - May 22, 2022)",
y = "Seroprevalence Estimate (%)",
title = "Seroprevalence Estimate (%)"
) +
scale_color_manual(
name = NULL,
values = c("Seroprevalence" = "black")
) +
theme_clean() +
theme(
axis.text.x = element_text(size = 14, angle = 45, hjust = 0.85),
axis.title.x = element_text(size = 14, color = "black", face = "bold"),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 14, color = "black", face = "bold"),
plot.title = element_text(size = 14, color = "black", hjust = 0.5),
strip.text = element_text(size = 14, color = "black"),
legend.title = element_blank(),
legend.text = element_text(size = 16),
legend.background = element_rect(color = NA),
legend.margin = margin(0, 0, 0, 0),
plot.background = element_blank(),
legend.position = c(0.2, 0.8)
) )
seroprev_plot
# load reported data
reported_cases <- read.csv("~/Documents/MUN/Thesis Samples/quantifying_omicron_burden_in_NL/data/serop_avgcase_data.csv")
reported_cases$date <- as.Date(reported_cases$date, format = "%Y-%m-%d")
reported_cases <- reported_cases |>
dplyr::filter(date <= as.Date("2022-05-22"))
# drop all NAs
reported_cases <- reported_cases |>
drop_na()
reported_cases <- (ggplot(reported_cases, aes(x = date)) +
geom_point( aes(y = cases, color = "Reported Cases"),size = 2.5) +
scale_x_date(
#expand = c(0, 0),
date_breaks = "2 week",
date_labels = "%b %d"
) +
labs(
x = "Date (Dec 15, 2021 - May 22, 2022)",
y = "Daily reported cases",
title = "Smoothed Daily Reported Cases"
) +
scale_color_manual(
name = NULL,
values = c("Reported Cases" = "black")
) +
theme_clean() +
theme(
axis.text.x = element_text(size = 14, angle = 45, hjust = 0.85),
axis.title.x = element_text(size = 16, color = "black", face = "bold"),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 16, color = "black", face = "bold"),
plot.title = element_text(size = 14, color = "black", hjust = 0.5),
strip.text = element_text(size = 14, color = "black"),
legend.title = element_blank(),
legend.text = element_text(size = 16),
legend.background = element_rect(color = NA),
legend.margin = margin(0, 0, 0, 0),
plot.background = element_blank(),
legend.position = c(0.8, 0.8)
))
reported_cases
final_plot <- plot_grid(
reported_cases,
seroprev_plot,
labels = c("R","S"),
nrow = 1,
align = "v",      # align plots vertically for horizontal layout
axis = "tb",      # align top and bottom axes
rel_widths = c(1, 1) # adjust widths if plots differ in size
)
final_plot
library(dplyr)
library(lubridate)
library(ggplot2)
library(RColorBrewer)
library(dplyr)
library(tidyr)
library(zoo)
library(ggthemes)
library(cowplot)
library(patchwork)
library(fuzzyjoin)
library(shellpipes)
library(tidyverse)
set.seed(2025)
options(macpan2_log_dir = ".")
loadEnvironments()
start_date <- as.Date("2021-12-15") - offset0
last_date <-"2022-05-22"
seroprevdata <- rdsRead("seroprevdata.rds")
time_steps = max(seroprevdata$time)
upper_plot_time = 300
seroprevdata <- seroprevdata %>%
complete(date = seq.Date(
from = as.Date("2021-12-15"),
to   = max(date),
by   = "1 day"
))
seroprevdata <- (seroprevdata
|> select(c("date","value"))
|> dplyr::filter(date >= as.Date("2021-12-15") & date <= as.Date("2022-05-22"))
)
seroprev_plot <- (ggplot() +
geom_point(
data = seroprevdata,
aes(x = date, y = value, color = "Seroprevalence"),
size = 2.5,
show.legend = TRUE
) +
scale_x_date(
#expand = c(0, 0),
date_breaks = "2 week",
date_labels = "%b %d"
) +
labs(
x = "Date (Dec 15, 2021 - May 22, 2022)",
y = "Seroprevalence Estimate (%)",
title = "Seroprevalence Estimate (%)"
) +
scale_color_manual(
name = NULL,
values = c("Seroprevalence" = "black")
) +
theme_clean() +
theme(
axis.text.x = element_text(size = 14, angle = 45, hjust = 0.85),
axis.title.x = element_text(size = 14, color = "black", face = "bold"),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 14, color = "black", face = "bold"),
plot.title = element_text(size = 16, color = "black", hjust = 0.5),
strip.text = element_text(size = 14, color = "black"),
legend.title = element_blank(),
legend.text = element_text(size = 16),
legend.background = element_rect(color = NA),
legend.margin = margin(0, 0, 0, 0),
plot.background = element_blank(),
legend.position = c(0.2, 0.8)
) )
seroprev_plot
# load reported data
reported_cases <- read.csv("~/Documents/MUN/Thesis Samples/quantifying_omicron_burden_in_NL/data/serop_avgcase_data.csv")
reported_cases$date <- as.Date(reported_cases$date, format = "%Y-%m-%d")
reported_cases <- reported_cases |>
dplyr::filter(date <= as.Date("2022-05-22"))
# drop all NAs
reported_cases <- reported_cases |>
drop_na()
reported_cases <- (ggplot(reported_cases, aes(x = date)) +
geom_point( aes(y = cases, color = "Reported Cases"),size = 2.5) +
scale_x_date(
#expand = c(0, 0),
date_breaks = "2 week",
date_labels = "%b %d"
) +
labs(
x = "Date (Dec 15, 2021 - May 22, 2022)",
y = "Daily reported cases",
title = "Smoothed Daily Reported Cases"
) +
scale_color_manual(
name = NULL,
values = c("Reported Cases" = "black")
) +
theme_clean() +
theme(
axis.text.x = element_text(size = 14, angle = 45, hjust = 0.85),
axis.title.x = element_text(size = 16, color = "black", face = "bold"),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 16, color = "black", face = "bold"),
plot.title = element_text(size = 16, color = "black", hjust = 0.5),
strip.text = element_text(size = 14, color = "black"),
legend.title = element_blank(),
legend.text = element_text(size = 16),
legend.background = element_rect(color = NA),
legend.margin = margin(0, 0, 0, 0),
plot.background = element_blank(),
legend.position = c(0.8, 0.8)
))
reported_cases
final_plot <- plot_grid(
reported_cases,
seroprev_plot,
labels = c("R","S"),
nrow = 1,
align = "v",      # align plots vertically for horizontal layout
axis = "tb",      # align top and bottom axes
rel_widths = c(1, 1) # adjust widths if plots differ in size
)
final_plot
library(dplyr)
library(lubridate)
library(ggplot2)
library(RColorBrewer)
library(dplyr)
library(tidyr)
library(zoo)
library(ggthemes)
library(cowplot)
library(patchwork)
library(fuzzyjoin)
library(shellpipes)
library(tidyverse)
set.seed(2025)
options(macpan2_log_dir = ".")
loadEnvironments()
start_date <- as.Date("2021-12-15") - offset0
last_date <-"2022-05-22"
seroprevdata <- rdsRead("seroprevdata.rds")
time_steps = max(seroprevdata$time)
upper_plot_time = 300
seroprevdata <- seroprevdata %>%
complete(date = seq.Date(
from = as.Date("2021-12-15"),
to   = max(date),
by   = "1 day"
))
seroprevdata <- (seroprevdata
|> select(c("date","value"))
|> dplyr::filter(date >= as.Date("2021-12-15") & date <= as.Date("2022-05-22"))
)
seroprev_plot <- (ggplot() +
geom_point(
data = seroprevdata,
aes(x = date, y = value, color = "Seroprevalence"),
size = 2.5,
show.legend = TRUE
) +
scale_x_date(
#expand = c(0, 0),
date_breaks = "2 week",
date_labels = "%b %d"
) +
labs(
x = "Date (Dec 15, 2021 - May 22, 2022)",
y = "Seroprevalence Estimate (%)",
title = "Seroprevalence Estimate (%)"
) +
scale_color_manual(
name = NULL,
values = c("Seroprevalence" = "black")
) +
theme_clean() +
theme(
axis.text.x = element_text(size = 14, angle = 45, hjust = 0.85),
axis.title.x = element_text(size = 16, color = "black", face = "bold"),
axis.text.y = element_text(size = 14),
axis.title.y = element_text(size = 16, color = "black", face = "bold"),
plot.title = element_text(size = 16, color = "black", hjust = 0.5),
strip.text = element_text(size = 14, color = "black"),
legend.title = element_blank(),
legend.text = element_text(size = 16),
legend.background = element_rect(color = NA),
legend.margin = margin(0, 0, 0, 0),
plot.background = element_blank(),
legend.position = c(0.2, 0.8)
) )
seroprev_plot
# load reported data
reported_cases <- read.csv("~/Documents/MUN/Thesis Samples/quantifying_omicron_burden_in_NL/data/serop_avgcase_data.csv")
reported_cases$date <- as.Date(reported_cases$date, format = "%Y-%m-%d")
reported_cases <- reported_cases |>
dplyr::filter(date <= as.Date("2022-05-22"))
# drop all NAs
reported_cases <- reported_cases |>
drop_na()
reported_cases <- (ggplot(reported_cases, aes(x = date)) +
geom_point( aes(y = cases, color = "Reported Cases"),size = 2.5) +
scale_x_date(
#expand = c(0, 0),
date_breaks = "2 week",
date_labels = "%b %d"
) +
labs(
x = "Date (Dec 15, 2021 - May 22, 2022)",
y = "Daily reported cases",
title = "Smoothed Daily Reported Cases"
) +
scale_color_manual(
name = NULL,
values = c("Reported Cases" = "black")
) +
theme_clean() +
theme(
axis.text.x = element_text(size = 14, angle = 45, hjust = 0.85),
axis.title.x = element_text(size = 16, color = "black", face = "bold"),
axis.text.y = element_text(size = 16),
axis.title.y = element_text(size = 16, color = "black", face = "bold"),
plot.title = element_text(size = 16, color = "black", hjust = 0.5),
strip.text = element_text(size = 14, color = "black"),
legend.title = element_blank(),
legend.text = element_text(size = 16),
legend.background = element_rect(color = NA),
legend.margin = margin(0, 0, 0, 0),
plot.background = element_blank(),
legend.position = c(0.8, 0.8)
))
reported_cases
final_plot <- plot_grid(
reported_cases,
seroprev_plot,
labels = c("R","S"),
nrow = 1,
align = "v",      # align plots vertically for horizontal layout
axis = "tb",      # align top and bottom axes
rel_widths = c(1, 1) # adjust widths if plots differ in size
)
final_plot
